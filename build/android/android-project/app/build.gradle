plugins {
    // Switch depending on your library/app logic
	
    id 'com.android.application' version '8.1.1'
    // or: id 'com.android.library' version '8.1.1'
}

android {
    compileSdk 33
    namespace "org.libsdl.app"
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            ndkBuild {
                arguments "APP_PLATFORM=android-16"
                // abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                // abiFilters 'arm64-v8a'
            }
            cmake {
                arguments "-DANDROID_APP_PLATFORM=android-16", "-DANDROID_STL=c++_static"
                // abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                // abiFilters 'arm64-v8a'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        tasks["merge${variant.name.capitalize()}Assets"]
                .dependsOn("externalNativeBuild${variant.name.capitalize()}")
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
        externalNativeBuild {
            // ndkBuild {
            //     path 'jni/Android.mk'
            // }
            cmake {
                path "../../../../Project/CMakeLists.txt"
                version "3.22.1"
            }
        }

    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            assets {
                srcDirs 'src\\main\\assets'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
